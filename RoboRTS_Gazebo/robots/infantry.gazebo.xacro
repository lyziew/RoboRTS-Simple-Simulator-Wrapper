<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="roborts_robot_xacro">

  <xacro:macro name="led_color" params="name">

    <gazebo reference="fr_wheel_link">
      <material>Gazebo/Black</material>
      <turnGravityOff>false</turnGravityOff>
    </gazebo>

    <gazebo reference="fl_wheel_link">
      <material>Gazebo/Black</material>
      <turnGravityOff>false</turnGravityOff>
    </gazebo>

    <gazebo reference="br_wheel_link">
      <material>Gazebo/Black</material>
      <turnGravityOff>false</turnGravityOff>
    </gazebo>

    <gazebo reference="bl_wheel_link">
      <material>Gazebo/Black</material>
      <turnGravityOff>false</turnGravityOff>
    </gazebo>

    <gazebo reference="yaw_link">
      <material>Gazebo/Black</material>
      <turnGravityOff>false</turnGravityOff>
    </gazebo>

    <gazebo reference="pitch_link">
      <material>Gazebo/Black</material>
      <turnGravityOff>false</turnGravityOff>
    </gazebo>

    <gazebo reference="camera_link">
      <material>Gazebo/Black</material>
      <turnGravityOff>false</turnGravityOff>
    </gazebo>

    <gazebo reference="led_link">
      <material>Gazebo/${name}</material>
      <turnGravityOff>false</turnGravityOff>
    </gazebo>

  </xacro:macro>

  <!-- materials -->
  <gazebo reference="base_link">
    <material>Gazebo/Black</material>
    <turnGravityOff>false</turnGravityOff>
    <!--<kinematic>1</kinematic>-->
  </gazebo>


  <gazebo reference="uwb_tag_link">
    <material>Gazebo/Black</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

  <gazebo reference="base_laser_link">
    <material>Gazebo/Black</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <!-- hokuyo -->
  <gazebo reference="base_laser_link">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0.2 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>15</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>0.5</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.3</min>
          <max>4.5</max>
          <resolution>0.3</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.015</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>base_laser_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!-- camera -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.  
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>robot/camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_Link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <!-- position controller plugin-->
  <gazebo>
    <plugin name="mecanum_base_controller" filename="libroborts_gazebo_ros_force_based_omni_move.so">
      <cmd_vel_topic>/cmd_vel</cmd_vel_topic>
      <odom_topic>odom</odom_topic>
      <odom_frame>odom</odom_frame>
      <odom_rate>20.0</odom_rate>
      <robot_base_frame>base_link</robot_base_frame>
      <publish_odom_tf>1</publish_odom_tf>
      <rotation_velocity_p_gain>800.0</rotation_velocity_p_gain>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="uwb_plugin" filename="libroborts_gazebo_ros_uwb.so">
      <topic_name>uwb</topic_name>
      <frame_id>uwb</frame_id>
      <body_name>base_link</body_name>
      <gaussian_noise>0.04</gaussian_noise>
      <update_rate_hz>15.0</update_rate_hz>
    </plugin>
  </gazebo>


  <gazebo reference="imu">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <bodyName>imu</bodyName>
        <updateRateHZ>50.0</updateRateHZ>
        <gaussianNoise>0.03</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu</frameName>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>

  <!-- ros_control plugin -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotParam>robot_description</robotParam>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>

</robot>
